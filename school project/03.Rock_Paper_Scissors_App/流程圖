┌────────────────────────────┐
│  App 啟動：MainActivity 啟動                             │
└────────────┬─────────────┘
             ↓
  初始化畫面元件（findViewById）
             ↓
  執行 initGame() 初始化狀態：
  - 顯示提示：「何連勝できるかな？」
  - 清除圖片背景（全白）
  - 隱藏 CPU 圖片
  - 停用按鈕（勝負！與次の戦いへ）
             ↓
┌────────────────────────────┐
│  玩家操作：點選「剪刀 / 石頭 / 布」任一圖片                 │
└────────────┬─────────────┘
             ↓
  onClickSelectHand(view):
  - 根據點選的 ImageView 記錄手勢（0/1/2）
  - 將該圖背景變紅，其他為白
  - 啟用「勝負！」按鈕
             ↓
┌────────────────────────────┐
│  玩家點擊「勝負！」按鈕                                  │
└────────────┬─────────────┘
             ↓
  onClickStartAction(view):
  - 產生 CPU 的亂數手勢（0~2）
  - 顯示對應圖片（imgCpuHand）
  - 呼叫 judgeJanken(cpuHand)
      └─ 根據玩家 vs CPU：
         ▸ 勝利：winCount++
         ▸ 平手 / 敗北：winCount = 0
      └─ 顯示結果到 txtResult
  - 停用三個 ImageView 點擊
  - 停用「勝負！」按鈕，啟用「次の戦いへ」
             ↓
┌────────────────────────────┐
│  玩家點擊「次の戦いへ」按鈕                              │
└────────────┬─────────────┘
             ↓
  onClickNextAction(view):
  - 重設 ImageView 背景為白色
  - 啟用三個手勢圖片的點擊功能
  - 清空結果文字 txtResult
  - 隱藏 imgCpuHand
  - 停用兩個按鈕
  - playerHand 設為 -1（清除選擇）
             ↓
        回到選擇手勢流程
